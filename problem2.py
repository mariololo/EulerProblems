"""

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
"""
import math

def fibonacci_num(n):
	return int(( ( ( 1 + math.sqrt(5) ) ** n ) - ( ( 1 - math.sqrt(5) ) ** n)) / (2**n * math.sqrt(5)))

def fibonacci_sum_evens(limit):
	
	sum = 0
	n = 0
	while True:
		num = fibonacci_num(n)

		if num < limit:
			if num % 2 == 0:
				sum += num
			n += 1
		else:
			return sum



	

if __name__ == '__main__':
	print(fibonacci_sum_evens(limit = 4000000))